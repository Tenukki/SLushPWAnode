{"version":3,"sources":["InfoConnect.js","NewInfo.js","Components/Info.js","sortingAlgorythm/sorting.js","Components/search.js","App.js","index.js"],"names":["getAll","a","axios","get","request","data","create","newObject","post","update","id","put","then","response","poista","delete","NewInfo","setData","useState","title","setTitle","category","setCategory","text","setText","postData","event","preventDefault","Connect","newData","console","log","className","Form","onSubmit","Group","Label","Control","onChange","target","value","type","placeholder","as","rows","Button","variant","Info","deletee","onClick","sorting","list","word","sort","b","includes","Search","setWord","clone","newdata","App","useEffect","allData","map","class","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bb4f2023.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/infos'\r\n\r\nconst getAll = async () => {\r\n  const request = await axios.get(baseUrl)\r\n  return request.data\r\n}\r\n\r\nconst create = async newObject => {\r\n  const request = await axios.post(baseUrl, newObject)\r\n  return request.data\r\n}\r\n\r\nconst update = async (id, newObject) => {\r\n  const request = await axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst poista = async (id) => {\r\n  const request = await axios.delete(`${baseUrl}/${id}`)\r\n  return request.data\r\n}\r\n\r\nexport default { getAll, create, update , poista}","import React,{useState, useEffect} from \"react\"\r\nimport { Form,Button } from 'react-bootstrap'\r\nimport \"./Styles/newInfoStyle.css\"\r\nimport Connect from \"./InfoConnect\"\r\n\r\nconst NewInfo = ({setData}) => {\r\n    const [title, setTitle] = useState(\"\");\r\n    const [category, setCategory] = useState(\"\");\r\n    const [text, setText] = useState(\"\");\r\n\r\n    const postData = async (event) =>{\r\n        event.preventDefault()\r\n        if(title !== \"\" && category !== \"\" && text !== \"\"){\r\n            let data = {\r\n                title,\r\n                category,\r\n                text,\r\n            }\r\n            const response = await Connect.create(data)\r\n            const newData = await Connect.getAll()\r\n            setData(newData)\r\n            console.log(response)\r\n        }else{\r\n            console.log(\"Dont send empty data\")\r\n        }\r\n        \r\n    }\r\n \r\n    return(\r\n        \r\n            <div className=\"shadowBackround center effect6\">\r\n                \r\n                <Form onSubmit={postData}>\r\n                <Form.Group >\r\n                    <Form.Label>Title:</Form.Label>\r\n                    <Form.Control onChange={event => setTitle(event.target.value)} type=\"text\" placeholder=\"Enter the title of info\" />\r\n                </Form.Group>\r\n\r\n                <Form.Group >\r\n                    <Form.Label>Category:</Form.Label>\r\n                    <Form.Control onChange={event => setCategory(event.target.value)} type=\"text\" placeholder=\"Enter the Category ex.Factory\" />\r\n                </Form.Group>\r\n                \r\n                \r\n                <Form.Group >\r\n                    <Form.Label>Write the info conserning the title</Form.Label>\r\n                    <Form.Control onChange={event => setText(event.target.value)} as=\"textarea\" rows=\"7\" />\r\n                </Form.Group>\r\n\r\n                <Button variant=\"primary\" type=\"submit\">Submit</Button>\r\n                {console.log(category)}\r\n                {console.log(title)}\r\n                {console.log(text)}\r\n                \r\n                </Form>\r\n                \r\n            </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default NewInfo;","import React,{useState, useEffect} from \"react\"\r\nimport { Form,Button } from 'react-bootstrap'\r\nimport Connect from \"../InfoConnect\"\r\n\r\n\r\nconst Info = ({title,category,text,id,setData}) =>{\r\n    \r\n    const deletee = async () =>{\r\n        const del = await Connect.poista(id)\r\n        const newData = await Connect.getAll()\r\n        setData(newData)\r\n    }\r\n\r\n    return(\r\n        <div >\r\n            <h1>{title}</h1>\r\n            <h3>{category}</h3>\r\n            <p>{text}</p>\r\n            <Button variant=\"danger\" onClick={deletee}>Delete</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Info","\r\nconst sorting = (list,word) =>{\r\n        return list.sort((a,b) => {\r\n                if(a.title.includes(word)){\r\n                        return -1;\r\n                }else if(b.title.includes(word)){\r\n                        return -1;\r\n                }else{\r\n                        return 0;\r\n                }\r\n        } \r\n)}\r\n\r\nexport default sorting","import React,{useState, useEffect} from \"react\"\r\nimport Connect from \"../InfoConnect\"\r\nimport { Form,Button } from 'react-bootstrap'\r\nimport \"../Styles/newInfoStyle.css\"\r\nimport sorting from \"../sortingAlgorythm/sorting\"\r\n\r\nconst Search = ({setData,data}) => {\r\n    const [word, setWord] = useState(\"\")\r\n    \r\n    const HandeChange = (event) =>{\r\n        setWord(event.target.value)\r\n        let clone = [...data]   \r\n        let newdata = sorting(clone,word)\r\n        setData(newdata)\r\n\r\n    }\r\n    return(\r\n        <div className=\"search\">\r\n            <Form.Group >\r\n            <Form.Control type=\"text\" onChange={HandeChange}  placeholder=\"Search\" />\r\n        </Form.Group>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Search","import React,{useEffect,useState} from 'react';\nimport NewInfo from \"./NewInfo\"\nimport { Table, Form, Button } from 'react-bootstrap'\nimport Info from \"./Components/Info\"\nimport Connect from \"./InfoConnect\"\nimport \"./Styles/newInfoStyle.css\"\nimport Search from \"./Components/search\"\n\n\nfunction App() {\n\n  const [data, setData] = useState([]);\n  \n  useEffect( async () => {\n    let data = await Connect.getAll()\n    setData(data)\n  },[]);\n\n  const allData = data.map((data) =>\n    <div className=\"shadowBackround2\" >\n      <Info title={data.title} category={data.category} text={data.text} id={data.id} setData={setData} />\n    </div>\n  )\n  return (\n    <div class=\"container\">\n      <p>\n        <NewInfo setData={setData}/>\n        <Search data={data} setData={setData}/>\n        {allData}\n      </p>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}